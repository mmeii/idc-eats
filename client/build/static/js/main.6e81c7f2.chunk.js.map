{"version":3,"sources":["components/Nav/index.js","components/PriceCheckbox/index.js","components/Btn/index.js","components/ContainerWrapper/index.js","pages/Eats/index.js","pages/Details/index.js","components/Motion/index.js","pages/Login/index.js","components/PreferenceOptions/index.js","pages/Preferences/index.js","App.js","registerServiceWorker.js","index.js"],"names":["SimpleMenu","React","useState","anchorEl","setAnchorEl","handleClose","className","Button","aria-controls","aria-haspopup","onClick","event","currentTarget","id","fontSize","href","Menu","keepMounted","open","Boolean","onClose","MenuItem","to","PriceCheckbox","Checkbox","color","inputProps","Btn","props","variant","label","ContainerWrapper","Container","maxWidth","children","makeStyles","theme","root","margin","spacing","Eats","showDetails","setShowDetails","RestaurantDetails","src","alt","Rando","process","Details","target","rel","Motion","motion","div","whileHover","scale","whileTap","Login","username","setUsername","password","setPassword","onSubmit","preventDefault","credentials","axios","post","handleSubmit","value","onChange","placeholder","type","class","PreferenceOptions","FormGroup","row","Preferences","style","textAlign","App","coords","setCoords","useEffect","fetchCoords","get","latitude","longitude","console","log","navigator","geolocation","getCurrentPosition","res","exact","path","component","isLocalhost","window","location","hostname","match","registerValidSW","swUrl","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","catch","error","ReactDOM","render","document","getElementById","URL","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.6e81c7f2.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport RestaurantMenuIcon from \"@material-ui/icons/RestaurantMenu\";\nimport './style.css';\n\nexport default function SimpleMenu() {\n\tconst [anchorEl, setAnchorEl] = React.useState(null);\n\n\tconst handleClick = event => {\n\t\tsetAnchorEl(event.currentTarget);\n\t};\n\n\tconst handleClose = () => {\n\t\tsetAnchorEl(null);\n\t};\n\n\treturn (\n\t\t<div className=\"nav\">\n\t\t\t<Button\n\t\t\t\taria-controls=\"simple-menu\"\n\t\t\t\taria-haspopup=\"true\"\n\t\t\t\tonClick={handleClick}\n\t\t\t>\n\t\t\t\t<RestaurantMenuIcon id=\"navIcon\" fontSize=\"large\" />\n\t\t\t</Button>\n\n\t\t\t{/* this is linked directly on the nav button menu dropdown \n\t\t\t\n\t\t\t<a href=\"/auth/logout\">Logout</a> */}\n\n\t\t\t<a href=\"/auth/google\">Login with Google</a>\n\n\n\t\t\t<Menu\n\t\t\t\tid=\"simple-menu\"\n\t\t\t\tanchorEl={anchorEl}\n\t\t\t\tkeepMounted\n\t\t\t\topen={Boolean(anchorEl)}\n\t\t\t\tonClose={handleClose}\n\t\t\t>\n\t\t\t\t<MenuItem onClick={handleClose}>\n\t\t\t\t\t<Link to=\"eats\">Eats</Link>\n\t\t\t\t</MenuItem>\n\n\t\t\t\t<MenuItem onClick={handleClose}>\n\t\t\t\t\t{/* ADD in link to preferences/profile page */}\n\t\t\t\t\t<Link to=\"preferences\">Preferences</Link>\n\t\t\t\t</MenuItem>\n\n\t\t\t\t<MenuItem onClick={handleClose}>\n\t\t\t\t\t<a href=\"/auth/logout\">Logout</a>\n\t\t\t\t</MenuItem>\n\t\t\t</Menu>\n\n\t\t</div>\n\t);\n}\n","import React from 'react';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nconst PriceCheckbox = () => {\n    const [checked, setChecked] = React.useState(true);\n\n    const handleChange = (event) => {\n        setChecked(event.target.checked);\n    };\n\n    return (\n        <Checkbox\n            color=\"primary\"\n            inputProps={{ 'aria-label': 'secondary checkbox' }}\n        />\n    )\n}\n\nexport default PriceCheckbox;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\n\nfunction Btn(props) {\n    return (\n        <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={props.onClick}\n        >\n            {props.label}\n        </Button>\n    );\n}\n\nexport default Btn;","import React from 'react';\nimport Container from '@material-ui/core/Container';\n\nexport default function ContainerWrapper(props) {\n    return (\n        <Container className=\"container\"\n            maxWidth=\"sm\"\n        // alignItems=\"center\"\n        // justifyContent=\"center\"\n        // display=\"flex\"\n        // style={{ minHeight: '100vh' }}\n        >\n            {props.children}\n        </Container>\n    );\n}\n","import React, { useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport PriceCheckbox from '../../components/PriceCheckbox';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Btn from '../../components/Btn';\nimport ContainerWrapper from '../../components/ContainerWrapper';\nimport './style.css';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(1),\n        },\n    },\n}));\n\nexport default function Eats() {\n\n    const [showDetails, setShowDetails] = useState(false);\n    const onClick = () => setShowDetails(true);\n\n    const RestaurantDetails = () => (\n        <div className=\"oneRestaurant\">\n            <div>\n                <img src=\"https://via.placeholder.com/300\" alt=\"restaurant\" />\n            </div>\n\n            <Link to=\"details\">\n                <Btn label=\"More Info\" />\n            </Link>\n        </div>\n    );\n\n    const Rando = () => (\n        <div className=\"eats\">\n            <div className=\"imgDiv\">\n                <img id=\"restaurantImg\"\n                    src={`${process.env.PUBLIC_URL}/assets/rando.jpg`} alt=\"restaurant\"\n                />\n            </div>\n\n            <div className=\"price\">\n                <PriceCheckbox /> $\n                    <PriceCheckbox /> $$\n                    <PriceCheckbox /> $$$\n                    <PriceCheckbox /> $$$$\n                </div>\n\n            <Btn\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={onClick}\n                label=\"Rando\"\n            />\n        </div>\n    )\n\n    return (\n        <ContainerWrapper>\n            {showDetails ? <RestaurantDetails /> : <Rando />}\n        </ContainerWrapper >\n    )\n}\n\n\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport Btn from '../../components/Btn';\nimport ContainerWrapper from '../../components/ContainerWrapper';\n\nconst Details = () => {\n    return (\n        <div>\n            <ContainerWrapper>\n                <h1>Restaurant Name</h1>\n                <div className=\"restaurantImage\">\n                    <img src=\"https://via.placeholder.com/300\" alt=\"restaurant\" />\n                </div>\n\n                <div className=\"restaurantDetail\">\n                    <h2>Rating: </h2>\n                    <h2>Location: </h2>\n                    <h2>Phone: </h2>\n                </div>\n\n                {/* goes back to Eats/rando page */}\n                <Link to=\"eats\">\n                    <Btn label=\"Nope\" />\n                </Link>\n\n                {/* goes to google for directions */}\n                {/* TODO: add location and restaurant address */}\n                <a href=\"https://www.google.com/maps\" target=\"_blank\" rel=\"noopener noreferrer\">\n                    <Btn label=\"Take Me There!\" />\n                </a>\n\n            </ContainerWrapper>\n        </div>\n    )\n}\n\nexport default Details;\n","import React from \"react\";\nimport { motion } from \"framer-motion\";\nimport \"./style.css\";\n\nconst Motion = () => {\n  return (\n    <motion.div\n      className=\"square\"\n      whileHover={{ scale: 1.1 }}\n      whileTap={{ scale: 2.1 }}\n    />\n  );\n};\n\nexport default Motion;\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Motion from \"../../components/Motion\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Btn from \"../../components/Btn\";\nimport ContainerWrapper from \"../../components/ContainerWrapper\";\nimport \"./style.css\";\n\nfunction Login() {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const credentials = { username, password };\n    axios.post(\"/auth/signup\", credentials);\n    setUsername(\"\");\n    setPassword(\"\");\n  };\n\n  return (\n    <ContainerWrapper>\n      <Motion />\n      <form onSubmit={(event) => handleSubmit(event)}>\n        <input\n          id=\"username\"\n          label=\"username\"\n          value={username}\n          onChange={({ target: { value } }) => setUsername(value)}\n          placeholder=\"username\"\n        />\n        <input\n          id=\"password\"\n          label=\"password\"\n          value={password}\n          onChange={({ target: { value } }) => setPassword(value)}\n          placeholder=\"password\"\n        />\n        <Btn type=\"submit\" label=\"Login\" id=\"loginbtn\"></Btn>\n        <p>Don't have an account? Make one!</p>\n        <Btn label=\"Create Account\" id=\"createbtn\"></Btn>\n      </form>\n      <div id=\"googlelogin\">\n        <h1>Login with Google</h1>\n        <a href=\"/auth/google\">\n          <i class=\"fab fa-google\"></i>\n        </a>\n      </div>\n    </ContainerWrapper>\n  );\n}\n\nexport default Login;\n","import React from 'react';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport PriceCheckbox from '../../components/PriceCheckbox';\n\n\n\n\nfunction PreferenceOptions() {\n\n\n  return (\n    <FormGroup row>\n      <PriceCheckbox />\n\n    </FormGroup>\n  );\n}\n\nexport default PreferenceOptions;","import React from \"react\";\nimport PreferenceOptions from \"../../components/PreferenceOptions\";\n\nfunction Preferences() {\n  return (\n    <div>\n\n      <div style={{ textAlign: \"center\" }}>\n        <h1>Preferences</h1>\n      </div>\n      <div style={{ margin: \"0 auto\" }}>\n        <PreferenceOptions />\n      </div>\n    </div>\n  );\n}\n\nexport default Preferences;\n","\nimport Nav from './components/Nav';\nimport Eats from './pages/Eats';\nimport Details from './pages/Details';\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Login from './pages/Login'\nimport axios from 'axios'\n\nimport \"./App.css\";\nimport Preferences from './pages/Preferences';\n\nfunction App() {\n\n  const [coords, setCoords] = useState({});\n\n  useEffect(() => {\n    fetchCoords();\n    axios.get(`/api/restaurants/${coords.latitude}/${coords.longitude}`)\n  }, []);\n\n  useEffect(() => {\n    console.log(coords);\n  }, [coords]);\n\n  const fetchCoords = () => {\n    navigator.geolocation.getCurrentPosition(res => {\n      setCoords({\n        latitude: res.coords.latitude,\n        longitude: res.coords.longitude,\n      });\n    });\n  };\n\n  return (\n    <Router>\n      <Nav />\n      <Switch>\n        {/* ADD in after created component={Login} */}\n        <Route exact path=\"/\" component={Login} />\n        {/*  ADD in after created component={Eats} */}\n        <Route exact path=\"/eats\" component={Eats} />\n        <Route exact path=\"/details\" component={Details} />\n        {/*  ADD in after created component={Preferences} */}\n        <Route exact path=\"/preferences\" component={Preferences} />\n        {/*  ADD in after created component={Logout} */}\n        <Route exact path=\"/logout\" />\n      </Switch>\n    </Router>\n  );\n\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}